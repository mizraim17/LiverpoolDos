{"version":3,"sources":["Component/TableProduct.js","Component/Home.js","App.js","serviceWorker.js","index.js"],"names":["TableProduct","props","react_default","a","createElement","lib","m","s","className","key","index","header","image","String","product","smallImage","actions","Fragment","productDisplayName","concat","moneda","Home","state","word","loading","onChange","e","_this","setState","target","value","preventDefault","findProduct","test","console","log","find","axios","get","then","res","data","contents","mainContent","records","length","window","Materialize","toast","catch","err","formatoMoneda","number","number1","toString","result","estado","parseInt","indexOf","substr","substring","pos","numberInt","numberDec","closeBar","document","getElementById","_this2","this","_this$state","id","type","placeholder","required","onClick","react_loader_spinner_default","color","height","width","map","el","i","Component_TableProduct","productId","parseFloat","productPrice","Component","App","Component_Home","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kQAgCeA,iBA3BM,SAACC,GACpB,OAGIC,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKC,EAAG,EAAGC,EAAG,GAAKC,UAAU,wBAC3BN,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACEI,IAAKR,EAAMS,MACXF,UAAU,gBACVG,OACET,EAAAC,EAAAC,cAACC,EAAA,UAAD,CAAYG,UAAU,WAAWI,MAAOC,OAAOZ,EAAMa,QAAQC,cAG/DC,QACEd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACAf,EAAAC,EAAAC,cAAA,QAAMI,UAAU,KAAKP,EAAMa,QAAQI,oBADnC,IAC8DhB,EAAAC,EAAAC,cAAA,WAC9DF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,cAAhB,KAAAW,OAAmClB,EAAMmB,gCC+ItCC,6MA1JbC,MAAM,CACJC,KAAK,GACLT,QAAS,KACTU,SAAQ,KAGVC,SAAU,SAACC,GACTC,EAAKC,SAAS,CAACL,KAAKG,EAAEG,OAAOC,QAC7BJ,EAAEK,iBACS,UAARL,EAAEjB,KACJkB,EAAKK,iBAIRC,KAAM,SAACP,GACLA,EAAEK,iBACFJ,EAAKC,SAAS,CAACL,KAAKG,EAAEG,OAAOC,QAElB,UAARJ,EAAEjB,MAEHyB,QAAQC,IAAI,kBAAkB,aAC9BR,EAAKK,kBAITA,YAAY,WAAI,IAEVI,EADCb,EAAQI,EAAKL,MAAbC,KAELI,EAAKC,SAAS,CAACJ,SAAQ,IACvBU,QAAQC,IAAI,WAAW,cAAeZ,GAEtCc,IAAMC,IAAN,0CAAAnB,OAAoDI,EAApD,2CACGgB,KAAK,SAACC,GACLN,QAAQC,IAAI,iBAAkB,eAAgBK,EAAIC,KAAKC,SAAS,GAAGC,YAAY,IAC/EP,EAAOI,EAAIC,KAAKC,SAAS,GAAGC,YAAY,GAAGD,SAAS,GAAGE,QACvDjB,EAAKC,SAAS,CAACd,QAAS0B,EAAIC,KAAKC,SAAS,GAAGC,YAAY,GAAGD,SAAS,GAAGE,UACvD,IAAdR,EAAKS,SACNX,QAAQC,IAAI,aACZW,OAAOC,YAAYC,MAAM,kDAA0C,IAAM,QAE3ErB,EAAKC,SAAS,CAACJ,SAAQ,MAExByB,MAAM,SAACC,GACNvB,EAAKC,SAAS,CAACJ,SAAQ,IACvBsB,OAAOC,YAAYC,MAAM,0CAA2C,IAAM,OAC1Ed,QAAQC,IAAI,YAAYe,QAI7BC,cAAc,SAACC,GAEd,IAAKC,EAAUD,EAAOE,WAAYC,EAAS,GAAIC,GAAS,EAMxD,GALIC,SAASJ,GAAW,IACtBG,GAAS,EAETH,GADAA,GAA+B,EAArBI,SAASJ,IACDC,aAES,GAAzBD,EAAQK,QAAQ,KAAY,CAC9B,KAAOL,EAAQR,OAAS,GACtBU,EAAS,IAAWF,EAAQM,OAAON,EAAQR,OAAS,GAAUU,EAC9DF,EAAUA,EAAQO,UAAU,EAAGP,EAAQR,OAAS,GAElDU,EAASF,EAAUE,EACL,GAAVC,IACFD,EAAS,IAAMA,OAGd,CAIH,IAHA,IAAKM,EAAMR,EAAQK,QAAQ,KACvBI,EAAYT,EAAQO,UAAU,EAAGC,GACjCE,EAAYV,EAAQO,UAAUC,EAAKR,EAAQR,QACxCiB,EAAUjB,OAAS,GACxBU,EAAS,IAAWO,EAAUH,OAAOG,EAAUjB,OAAS,GAAUU,EAClEO,EAAYA,EAAUF,UAAU,EAAGE,EAAUjB,OAAS,GAExDU,EAASO,EAAYP,EAASQ,GACf,IAAXP,IACFD,EAAS,IAAMA,GAGnB,OAAOA,KAGTS,SAAU,SAACtC,GACRuC,SAASC,eAAe,UAAUpC,MAAM,4EAGlC,IAAAqC,EAAAC,KAAAC,EACgBD,KAAK9C,MAAvBR,EADEuD,EACFvD,QAAQU,EADN6C,EACM7C,QACb,OACEtB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACAf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACfN,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACbN,EAAAC,EAAAC,cAAA,SACEkE,GAAG,SACHC,KAAK,SACLC,YAAY,8BACZC,UAAQ,EACRhD,SAAU2C,KAAK3C,WAGfvB,EAAAC,EAAAC,cAAA,SAAOI,UAAU,cAAeN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,kBAAb,WAChCN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,iBAAiBkE,QAASN,KAAKJ,UAA5C,aAKN9D,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKG,UAAU,OACbN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQG,UAAU,aAAakE,QAASN,KAAKpC,aAA7C,YAGAR,EACEtB,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,CACEoE,KAAK,QACLK,MAAM,UACNC,OAAO,MACPC,MAAM,QAET5E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACGf,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKG,UAAU,cAEjBM,EAEEZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KAEIH,EACGiE,IAAI,SAACC,EAAGC,GACP,OACE/E,EAAAC,EAAAC,cAAC8E,EAAD,CACE1E,UAAU,aACVC,IAAKI,OAAOmE,EAAGG,WACfzE,MAAOsE,EAAGG,UACVrE,QAASkE,EACT5D,OAAQ+C,EAAKhB,cAAciC,WAAWJ,EAAGK,oBAQrDnF,EAAAC,EAAAC,cAAA,KAAGI,UAAU,YAAb,2EAjJK8E,aCkBJC,yOAVX,OACErF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAACoF,EAAD,cATUF,cCIEG,QACW,cAA7B3C,OAAO4C,SAASC,UAEe,UAA7B7C,OAAO4C,SAASC,UAEhB7C,OAAO4C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5F,EAAAC,EAAAC,cAAC2F,EAAD,MAAS9B,SAASC,eAAe,SD2H3C,kBAAmB8B,WACrBA,UAAUC,cAAcC,MAAM3D,KAAK,SAAA4D,GACjCA,EAAaC","file":"static/js/main.8573c9f8.chunk.js","sourcesContent":["import React from 'react'\nimport {Card,Col,CardTitle} from 'react-materialize'\nimport \"../css/tableProduct.css\"\n\n\nconst TableProduct = (props)=> {\n  return(\n\n\n      <Col m={4} s={12}  className=\"container color-liv2\">\n        <Card\n          key={props.index}\n          className='small red-txt'\n          header={\n            <CardTitle  className=\"txtcard \" image={String(props.product.smallImage)}>\n\n            </CardTitle>}\n          actions={\n            <>\n            <span className=\" \">{props.product.productDisplayName}</span> <br/>\n            <span className=\" txt-price\">{`$ ${props.moneda}`}</span>\n\n            </>\n            }>\n\n        </Card>\n      </Col>\n\n\n\n  )\n}\nexport default TableProduct\n\n","import React,{Component} from \"react\"\nimport {Row,Button} from 'react-materialize'\nimport axios from 'axios'\nimport \"../css/home.css\"\nimport TableProduct from \"./TableProduct\";\nimport Loader from 'react-loader-spinner'\n\nclass Home extends Component{\n\n  state={\n    word:\"\",\n    product: null,\n    loading:false\n  }\n\n  onChange= (e) => {\n    this.setState({word:e.target.value})\n    e.preventDefault()\n    if(e.key==='Enter') {\n     this.findProduct()\n    }\n  }\n\n  test= (e) => {\n    e.preventDefault()\n    this.setState({word:e.target.value})\n\n    if(e.key==='Enter'){\n\n      console.log(\"%c tecleo enter\",\"color:red\" )\n      this.findProduct()\n    }\n  }\n\n  findProduct=()=>{\n    let {word} = this.state;\n    let find;\n    this.setState({loading:true})\n    console.log(\"%c entro\",\"color:green\", word)\n\n    axios.get(`https://www.liverpool.com.mx/tienda/?s=${word}&d3106047a194921c01969dfdec083925=json`)\n      .then((res)=> {\n        console.log(\"%c res request\", \"color:orange\", res.data.contents[0].mainContent[2])\n        find=  res.data.contents[0].mainContent[3].contents[0].records\n        this.setState({product: res.data.contents[0].mainContent[3].contents[0].records})\n        if(find.length===0){\n          console.log(\"entro a 0\")\n          window.Materialize.toast('Tú búsqueda no arrojo ningún resultado', 10000,'red')\n        }\n        this.setState({loading:false})\n      })\n      .catch((err)=>{\n        this.setState({loading:false})\n        window.Materialize.toast('Error intento contacte al administrador', 10000,'red')\n        console.log(\"err liver\",err)\n      })\n  }\n\n   formatoMoneda=(number )=> {\n\n    let  number1 = number.toString(), result = '', estado = true;\n    if (parseInt(number1) < 0) {\n      estado = false;\n      number1 = parseInt(number1) * -1;\n      number1 = number1.toString();\n    }\n    if (number1.indexOf(',') == -1) {\n      while (number1.length > 3) {\n        result = ',' + '' + number1.substr(number1.length - 3) + '' + result;\n        number1 = number1.substring(0, number1.length - 3);\n      }\n      result = number1 + result;\n      if (estado == false) {\n        result = '-' + result;\n      }\n    }\n    else {\n      let  pos = number1.indexOf(',');\n      let numberInt = number1.substring(0, pos);\n      let numberDec = number1.substring(pos, number1.length);\n      while (numberInt.length > 3) {\n        result = ',' + '' + numberInt.substr(numberInt.length - 3) + '' + result;\n        numberInt = numberInt.substring(0, numberInt.length - 3);\n      }\n      result = numberInt + result + numberDec;\n      if (estado === false) {\n        result = '-' + result;\n      }\n    }\n    return(result) ;\n  }\n\n  closeBar= (e)=>{\n     document.getElementById('search').value=\"\"\n  }\n\n  render() {\n    let {product,loading}= this.state\n    return(\n      <>\n      <nav>\n        <div className=\"nav-wrapper color-liv1\">\n        <form>\n          <div className=\"input-field\">\n            <input\n              id=\"search\"\n              type=\"search\"\n              placeholder=\"Teclea el producto a buscar\"\n              required\n              onChange={this.onChange}\n\n            />\n              <label className=\"label-icon\"  ><i className=\"material-icons\">search</i></label>\n              <i className=\"material-icons\" onClick={this.closeBar}>close</i>\n          </div>\n        </form>\n      </div>\n      </nav>\n        <Row className=\"pad\">\n          <Button className=\"btn-search\" onClick={this.findProduct}> buscar</Button>\n        </Row>\n        {\n          loading?\n            <Loader\n              type=\"Rings\"\n              color=\"#ffffff\"\n              height=\"400\"\n              width=\"400\"\n            />\n          :<>\n              <Row className=\"container \">\n          {\n            product\n            ?\n              <>\n                {\n                  product\n                    .map((el,i)=>{\n                      return(\n                        <TableProduct\n                          className=\"color-liv2\"\n                          key={String(el.productId)}\n                          index={el.productId}\n                          product={el}\n                          moneda={this.formatoMoneda(parseFloat(el.productPrice))}\n\n                        />\n                        )\n\n                    })\n                }\n              </>\n            : <p className=\"txt-home\">Realiza la búsqueda de tú producto en la barra superior</p>\n          }\n        </Row>\n            </>\n        }\n      </>\n    )\n  }\n\n}\n\nexport default Home","import React, {Component} from 'react';\n\nimport './App.css';\nimport Home from \"./Component/Home\";\nimport 'materialize-css/dist/css/materialize.css';\n\n\n\nclass App extends Component {\n\n  componentWillMount() {\n    // M.AutoInit();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Home/>\n      </div>\n    );\n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}